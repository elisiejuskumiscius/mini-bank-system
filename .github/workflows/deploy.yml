name: Build, Push to ECR, and Deploy to EC2

on:
  workflow_run:
    workflows: [ "Terraform AWS Deploy" ]
    types:
      - completed
    
permissions:
  id-token: write
  contents: read
  
jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::390844768930:role/ecr-role
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package

      - name: Build Docker images with Docker Compose
        run: docker compose build

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Tag Docker image
        run: |
          docker tag myapp:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-repo:latest

      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-repo:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Set up SSH key
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem
          
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get EC2 public IP
        id: get_ip
        working-directory: terraform
        run: |
          echo "ip=$(terraform output -raw app_instance_public_ip)" >> $GITHUB_OUTPUT

      - name: Copy docker-compose.yml to EC2
        run: | 
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem
          scp -i ec2_key.pem -o StrictHostKeyChecking=no docker-compose.deploy.yaml ubuntu@${{ steps.get_ip.outputs.ip }}:/home/ubuntu/docker-compose.yaml
        
      - name: SSH into EC2 and deploy
        run: |
          ssh -T -i ec2_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@ec2-56-228-23-164.eu-north-1.compute.amazonaws.com << 'EOF'
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          cd /home/ubuntu
          docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-repo:latest
          docker compose down
          docker compose up -d
          EOF

      - name: Remove key
        if: always()
        run: rm -f ec2_key.pem
